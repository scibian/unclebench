:numbered:

= Unclench Developer guide
CCN-HPC <dsp-cspit-ccn-hpc@edf.fr>
v2.0, 2018-10-19
:toc:
:data-uri:
:imagesdir: ./images


== Unclebench architecture

=== Class diagram
The Unclebench architecture is described on the following figure:

image::classDiagram.png[classDiagram.png,role="center",title="Unclebench class diagram"]

=== Main Unclebench classes

**Ubench_cmd** manages user commands and handles the different avaible options. It uses a __SchedulerInterface__ to handle scheduler dependent commandes (like choosing to run on specific nodes with the -w option).

**BenchmarkerManager**: Abstract class defining available benchmark operations like run, listing parameters or getting results.

**BenchmarkManagerSet**: Implementation of __BenchmarkManager__ that manages a collection of benchmarks. __BenchmarkManager__, __BenchmarkManagerSet__ and __StdBenchmarkManager__ are organised as a composite design pattern.

**StdBenchmarkManager**: Partial implementation of __BenchmarkManager__ that implements evry operation except the part related to the benchmarking engine. It contains a __benchmarking_api__ that is set by abstract factory method __get_benchmarking_api__.

**JubeBenchmarkManager**: Implements __StdBenchmarkManger__ by defining __get_benchmark_api__ method to retrieve a JubeBenchmarkingApi instance.

**JubeBenchmarkingAPI**: Implements __BenchmarkingAPI__ interface to provide an API that can manage Jube benchmarks.